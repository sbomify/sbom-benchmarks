---
name: Docker
on:
  push:
    branches:
      - master
    paths:
      - 'docker/**'
      - '.github/workflows/docker.yml'

env:
  TRIVY_VERSION: 0.54.1
  SYFT_VERSION: 1.11.1
  SBOMQS_VERSION: 0.1.9

jobs:
  trivy:
    name: Trivy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: "docker"
        run:
          docker build . -t nginx-test

      - name: Install Trivy
        run: |
          curl -L -o /tmp/trivy.tgz \
            "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz"
          tar xvf /tmp/trivy.tgz -C /tmp
          chmod +x /tmp/trivy

      - name: "CycloneDX: Generate SBOM"
        run: |
          /tmp/trivy image \
            --format cyclonedx \
            --output /tmp/trivy.cdx.json \
            nginx-test

      - name: "SPDX: Generate SBOM"
        run: |
          /tmp/trivy image \
            --format spdx-json \
            --output /tmp/trivy.spdx.json \
            nginx-test

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: container-trivy
          path: "/tmp/trivy.*.json"

  syft:
    name: Syft
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: "docker"
        run:
          docker build . -t nginx-test

      - name: Install Syft
        run: |
          curl -L -o /tmp/syft.tgz \
            "https://github.com/anchore/syft/releases/download/v${SYFT_VERSION}/syft_${SYFT_VERSION}_linux_amd64.tar.gz"
          tar xvf /tmp/syft.tgz -C /tmp
          chmod +x /tmp/syft

      - name: "CycloneDX: Generate SBOM"
        run: |
          /tmp/syft \
            nginx-test \
            -o cyclonedx-json \
              > /tmp/syft.cdx.json

      - name: "SPDX: Generate SBOM"
        run: |
          /tmp/syft \
            nginx-test \
            -o spdx-json \
            > /tmp/syft.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: container-syft
          path: "/tmp/syft.*.json"

  tern:
    name: Tern
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: "docker"
        run:
          docker build . -t nginx-test

      - name: "SPDX: Generate SBOM"
        uses: philips-labs/tern-action@v1.1.0
        id: scan
        with:
          image: nginx-test
          format: spdxjson
          output: tern.spdx.json

      - name: "CycloneDX: Generate SBOM"
        uses: philips-labs/tern-action@v1.1.0
        id: scan
        with:
          image: nginx-test
          format: cyclonedxjson
          output: tern.cdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: container-tern
          path: "tern.*.json"

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: "docker"
        run: |
          docker build . -t nginx-test

      # Provide a baseline of what system packages Debian think is installed
      - name:
        run: |
          docker run \
            --rm nginx-test \
            dpkg -l > /tmp/baseline.txt

      - name: Upload baseline
        uses: actions/upload-artifact@v4
        with:
          name: baseline
          path: "/tmp/baseline.txt"

  Score:
    needs:
     - trivy
     - syft
    runs-on: ubuntu-latest
    steps:
      - name: Download SBOMs
        uses: actions/download-artifact@v4

      - name: Install sbomqs
        run: |
          curl -L -o /tmp/sbomqs \
            "https://github.com/interlynk-io/sbomqs/releases/download/v${SBOMQS_VERSION}/sbomqs-linux-amd64"
          chmod +x /tmp/sbomqs


      - name: "Display SBOM quality score through sbomqs"
        run: |
          for SBOM in $(find . -iname *.json); do
            /tmp/sbomqs score "$SBOM"
          done
