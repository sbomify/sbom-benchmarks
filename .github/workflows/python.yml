---
name: Python
on:
  push:
    branches:
      - master
    paths:
      - 'python/**'
      - '.github/workflows/python.yml'

env:
  TRIVY_VERSION: 0.54.1
  SYFT_VERSION: 1.11.1
  CYCLONEDX_PYTHON_VERSION: 4.5.0
  SBOM4PYTHON_VERSION: 0.11.1
  SBOMQS_VERSION: 0.1.9

jobs:
  trivy:
    name: Trivy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          curl -L -o /tmp/trivy.tgz \
            "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz"
          tar xvf /tmp/trivy.tgz -C /tmp
          chmod +x /tmp/trivy

      - name: "CycloneDX: Generate SBOM"
        run: |
          /tmp/trivy fs \
            --format cyclonedx \
            --output /tmp/trivy.cdx.json \
            python/requirements.txt

      - name: "SPDX: Generate SBOM"
        run: |
          /tmp/trivy fs \
            --format spdx-json \
            --output /tmp/trivy.spdx.json \
            python/requirements.txt

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: python-trivy
          path: "/tmp/trivy.*.json"

  syft:
    name: Syft
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Syft
        run: |
          curl -L -o /tmp/syft.tgz \
            "https://github.com/anchore/syft/releases/download/v${SYFT_VERSION}/syft_${SYFT_VERSION}_linux_amd64.tar.gz"
          tar xvf /tmp/syft.tgz -C /tmp
          chmod +x /tmp/syft

      - name: "CycloneDX: Generate SBOM"
        run: |
          /tmp/syft python/requirements.txt \
            -o cyclonedx-json > \
            /tmp/syft.cdx.json

      - name: "SPDX: Generate SBOM"
        run: |
          /tmp/syft python/requirements.txt \
            -o spdx-json > \
            /tmp/syft.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: python-syft
          path: "/tmp/syft.*.json"

  cyclonedx-python:
    name: CycloneDX Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install CycloneDX Python
        run: |
          python -m pip install \
            cyclonedx-bom==${CYCLONEDX_PYTHON_VERSION}

      - name: "CycloneDX: Generate SBOM"
        run: |
          cyclonedx-py requirements \
            python/requirements.txt \
            --schema-version 1.6 \
            > /tmp/cyclonedx.cdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: python-cyclonedx
          path: "/tmp/cyclonedx.*.json"

  sbom4python:
    name: sbom4python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sbom4python
        run: |
          python -m pip install \
            sbom4python==${SBOM4PYTHON_VERSION}

      - name: "CycloneDX: Generate SBOM"
        run: |
          sbom4python \
            -r python/requirements.txt \
            --sbom cyclonedx \
            --format json \
            -o /tmp/sbom4python.cdx.json

      - name: "SPDX: Generate SBOM"
        run: |
          sbom4python \
            -r python/requirements.txt \
            --sbom spdx \
            --format json \
            -o /tmp/sbom4python.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom4python
          path: "/tmp/sbom4python.*.json"

  Score:
    needs:
     - trivy
     - syft
     - sbom4python
     - cyclonedx-python
    runs-on: ubuntu-latest
    steps:
      - name: Download SBOMs
        uses: actions/download-artifact@v4

      - uses: actions/checkout@v4

      - name: Install sbomqs
        run: |
          curl -L -o /tmp/sbomqs \
            "https://github.com/interlynk-io/sbomqs/releases/download/v${SBOMQS_VERSION}/sbomqs-linux-amd64"
          chmod +x /tmp/sbomqs

      - name: "Generate Summary Table"
        run: |
          # DEBUG
          find .

          calculate_duplication_percentage() {
            local total=$1
            local unique=$2

            if [ "$total" -eq 0 ]; then
              echo "Duplication Percentage: N/A (Total count is zero)"
              return 1
            fi

            local duplicates=$((total - unique))

            if [ "$duplicates" -lt 0 ]; then
              duplicates=0
            fi

            local duplication_percentage=$(echo "scale=2; ($duplicates / $total) * 100" | bc)

            echo "$duplication_percentage%"
          }



          # Baseline
          SYSTEM_BASELINE=$(cat python/requirements.txt | wc -l)

          # Syft
          SYFT_CDX_PATH="python-syft/syft.spdx.json"
          SYFT_CDX_TOTAL=$(jq '.components[] | .name' $SYFT_CDX_PATH | wc -l)
          SYFT_CDX_UNIQUE=$(jq '.components[] | .name' $SYFT_CDX_PATH | uniq | wc -l)
          SYFT_CDX_SBOMQS=$(/tmp/sbomqs score $SYFT_CDX_PATH -j)
          SYFT_CDX_VERSION=$(echo $SYFT_CDX_SBOMQS | jq -r '.files[0].spec_version')
          SYFT_CDX_QUALITY_SCORE=$(echo $SYFT_CDX_SBOMQS | jq -r '.files[0].avg_score')

          SYFT_SPDX_PATH="python-syft/syft.cdx.json"
          SYFT_SPDX_TOTAL=$(jq '.packages[] | .name' $SYFT_SPDX_PATH | wc -l)
          SYFT_SPDX_UNIQUE=$(jq '.packages[] | .name' $SYFT_SPDX_PATH | uniq | wc -l)
          SYFT_SPDX_SBOMQS=$(/tmp/sbomqs score $SYFT_SPDX_PATH -j)
          SYFT_SPDX_VERSION=$(echo $SYFT_SPDX_SBOMQS | jq -r '.files[0].spec_version')
          SYFT_SPDX_QUALITY_SCORE=$(echo $SYFT_SPDX_SBOMQS | jq -r '.files[0].avg_score')

          # Trivy
          TRIVY_CDX_PATH="python-trivy/trivy.cdx.json"
          TRIVY_CDX_TOTAL=$(jq '.components[] | .name' $TRIVY_CDX_PATH | wc -l)
          TRIVY_CDX_UNIQUE=$(jq '.components[] | .name' $TRIVY_CDX_PATH | uniq | wc -l)
          TRIVY_CDX_SBOMQS=$(/tmp/sbomqs score $TRIVY_CDX_PATH -j)
          TRIVY_CDX_VERSION=$(echo $TRIVY_CDX_SBOMQS | jq -r '.files[0].spec_version')
          TRIVY_CDX_QUALITY_SCORE=$(echo $TRIVY_CDX_SBOMQS | jq -r '.files[0].avg_score')

          TRIVY_SPDX_PATH="python-trivy/trivy.spdx.json"
          TRIVY_SPDX_TOTAL=$(jq '.packages[] | .name' $TRIVY_SPDX_PATH | wc -l)
          TRIVY_SPDX_UNIQUE=$(jq '.packages[] | .name' $TRIVY_SPDX_PATH | uniq | wc -l)
          TRIVY_SPDX_SBOMQS=$(/tmp/sbomqs score $TRIVY_SPDX_PATH -j)
          TRIVY_SPDX_VERSION=$(echo $TRIVY_SPDX_SBOMQS | jq -r '.files[0].spec_version')
          TRIVY_SPDX_QUALITY_SCORE=$(echo $TRIVY_SPDX_SBOMQS | jq -r '.files[0].avg_score')

          # sbom4python
          SBOM4PYTHON_CDX_PATH="python-trivy/trivy.cdx.json"
          SBOM4PYTHON_CDX_TOTAL=$(jq '.components[] | .name' $SBOM4PYTHON_CDX_PATH | wc -l)
          SBOM4PYTHON_CDX_UNIQUE=$(jq '.components[] | .name' $SBOM4PYTHON_CDX_PATH | uniq | wc -l)
          SBOM4PYTHON_CDX_SBOMQS=$(/tmp/sbomqs score $SBOM4PYTHON_CDX_PATH -j)
          SBOM4PYTHON_CDX_VERSION=$(echo $SBOM4PYTHON_CDX_SBOMQS | jq -r '.files[0].spec_version')
          SBOM4PYTHON_CDX_QUALITY_SCORE=$(echo $SBOM4PYTHON_CDX_SBOMQS | jq -r '.files[0].avg_score')

          SBOM4PYTHON_SPDX_PATH="python-trivy/trivy.spdx.json"
          SBOM4PYTHON_SPDX_TOTAL=$(jq '.packages[] | .name' $SBOM4PYTHON_SPDX_PATH | wc -l)
          SBOM4PYTHON_SPDX_UNIQUE=$(jq '.packages[] | .name' $SBOM4PYTHON_SPDX_PATH | uniq | wc -l)
          SBOM4PYTHON_SPDX_SBOMQS=$(/tmp/sbomqs score $SBOM4PYTHON_SPDX_PATH -j)
          SBOM4PYTHON_SPDX_VERSION=$(echo $SBOM4PYTHON_SPDX_SBOMQS | jq -r '.files[0].spec_version')
          SBOM4PYTHON_SPDX_QUALITY_SCORE=$(echo $SBOM4PYTHON_SPDX_SBOMQS | jq -r '.files[0].avg_score')

          # Header
          echo "| Tool | Format | Packages | Unique Packages | Duplication % | Avg Quality Score |" >> ${GITHUB_STEP_SUMMARY}
          echo "| -- | -- | -- | -- | -- |-- |" >> ${GITHUB_STEP_SUMMARY}

          # Construct table
          echo "| System Baseline | N/A | $SYSTEM_BASELINE | $SYSTEM_BASELINE | 0% | N/A |" >> ${GITHUB_STEP_SUMMARY}
          echo "| Syft $SYFT_VERSION | CycloneDX $SYFT_CDX_VERSION | $SYFT_CDX_TOTAL | $SYFT_CDX_UNIQUE | $(calculate_duplication_percentage $SYFT_CDX_TOTAL $SYFT_CDX_UNIQUE) | $SYFT_CDX_QUALITY_SCORE |" >> ${GITHUB_STEP_SUMMARY}
          echo "| Trivy $TRIVY_VERSION | CycloneDX $TRIVY_CDX_VERSION | $TRIVY_CDX_TOTAL | $TRIVY_CDX_UNIQUE | $(calculate_duplication_percentage $TRIVY_CDX_TOTAL $TRIVY_CDX_UNIQUE) | $TRIVY_CDX_QUALITY_SCORE |" >> ${GITHUB_STEP_SUMMARY}
          echo "| Syft $SYFT_VERSION | SPDX $SYFT_SPDX_VERSION | $SYFT_SPDX_TOTAL | $SYFT_SPDX_UNIQUE | $(calculate_duplication_percentage $SYFT_SPDX_TOTAL $SYFT_SPDX_UNIQUE) | $SYFT_SPDX_QUALITY_SCORE |" >> ${GITHUB_STEP_SUMMARY}
          echo "| Trivy $TRIVY_VERSION | SPDX $TRIVY_SPDX_VERSION | $TRIVY_SPDX_TOTAL | $TRIVY_SPDX_UNIQUE | $(calculate_duplication_percentage $TRIVY_SPDX_TOTAL $TRIVY_SPDX_UNIQUE)| $TRIVY_SPDX_QUALITY_SCORE |" >> ${GITHUB_STEP_SUMMARY}
